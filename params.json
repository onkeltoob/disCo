{"name":"disCo","tagline":"Show off your records on your website","body":"# Welcome to the disCo\r\n\r\ndisCo is a jQuery plugin that enables you to display your (or anyone else's) record collection hosted on [Discogs](http://www.discogs.com). If you haven't heard of Discogs, own a lot of music, and are at least a little nerdy you should seriously consider going there and putting your stuff together. The process of this is super comfortable, so it won't take too long (depending on the size of your collection). Once you're done you'll most definately feel the urge to let anyone know what you possess. And yes - size does matter.\r\n\r\nIf you own a website and want to show off your collection or at least your latest purchases (because you're that super famous DJ getting tons of new material every week), you can use disCo exactly for that.\r\n\r\n## Usage\r\n\r\nIt's a jQuery plugin, so simply using it is pretty basic stuff: [get the plugin](https://github.com/papatoob/disCo) and put it some place reasonable within your site structure. After that, reference the resource like this:\r\n\r\n```html\r\n<script src='/path/to/jquery.toob.disCo.js'></script>\r\n```\r\n\r\nThere have been discussions where exactly to put this line of code for  long time. I'm not an expert and don't want to judge or even argue, so I decided to put it at the end of my page (so loading it won't block anything, I guess).\r\n\r\nTwo steps left. First, create a `<div class=\"myRecords\">` element. You can put as much content in there as you like, for example:\r\n\r\n```html\r\n<div class=\"myRecords\" data-user=\"papatoob\">\r\n\t<h3>My latest records</h3>\r\n\t<p>Here's what I recently added to my collection.</p>\r\n</div>\r\n```\r\n\r\nYou will realize the additional attribute `data-user=\"papatoob\"` in there. This attribute tells the plugin whose collection to display. By specifying this for each element directly and not hard coding it within the plugin settings you're able to apply the plugin to multiple elements for different users with just one call. If you want or need to, you can use a different `data-` attribute; there's an option for this within the plugin's settings.\r\n\r\nThe resulting table will always be inserted at the end of the root element (the div you just created). And now finally call the plugin to work:\r\n\r\n```html\r\n<script>\r\n\t$(document).ready(function () {\r\n\t\t$('.myRecords').disCo({results: 5});\r\n\t});\r\n</script>\r\n```\r\n\r\nAnd here is what you get (on [my site](http://tobias-reinhardt.de/discogs-collection-plugin) with some styling):\r\n![Screenshot of generated records table](http://tobias-reinhardt.de/img/disco.png)\r\n\r\n### Wantlist\r\nYou can also show off your wantlist data now (this might come in handy the closer you get to your next birthday). Just use another data attribute on your container element for this: `data-collection=\"wantlist\"`. As with the data-user attribute above you can change the name of the attribute within the settings.\r\n\r\n## Settings\r\n\r\nThere's a couple of settings available that have some effect on the output of the plugin's work, here they are including their default values:\r\n\r\n* `userAttributeName: \"user\"` The name of the data-attribute containing the username. You can either specify the complete attribute name (e.g. \"data-discogsuser\") or simply the second part (\"discogsuser\").\r\n* `collectionAttributeName: \"collection\"` The name of the data-attribute containing the type of collection you want to retrieve. Value \"wantlist\" will retrieve the user's wantlist data, everything else will return the collection. Therefore, you don't have to use the attribute nor the setting if you want to show only your collection data.\r\n* `folder: 0` The ID of the folder you want to display records from. For now Discogs seems to allow folder requests only for the default folder containing all releases, so this option doesn't really make sense.\r\n* `sort: \"added\"` Sort column. Discogs only allows very few values here (\"added\", \"artist\", \"label\",...).\r\n* `sortOrder: \"desc\"` Sort order (\"asc\", \"desc\").\r\n* `results: 10` The number of results to be displayed. Beware: The larger the number, the more requests to Discogs will be made!\r\n* `resultElementClass: \"records\"` Class attribute for the entire result table or paragraph (if no results are found).\r\n* `resultElementId: \"\"` ID for the entire result table or paragraph (if no results are found).\r\n* `headerId: \"ID\"` The release ID column name.\r\n* `headerArtists: \"Artists\"` The artists column name.\r\n* `headerTitle: \"Title\"` The title column name.\r\n* `headerLabels: \"Labels\"` The record labels column name.\r\n* `headerStyles: \"Styles\"` The styles column name.\r\n* `headerYear: \"Year\"` The year column name (for the year of the release).\r\n* `noReleasesNote: \"No releases found.\"` Text to be displayed if no releases are found.\r\n* `autoReserveHeight: false` If set to true the approximate height of the result table will be calculated and applied within a style attribute so \"content flickering\" (or rather \"content moving\") of subsequent elements will be minimized. This setting is rather experimental as it uses the height of the first (header) row once this is created and multiplies this values by the number of retrieved results plus 1 (for the header row) and a configurable multiplier (see below).\r\n* `autoHeightMultiplier: 1` Factor for the table's calculated height. Use this, if your table has a significant number of multiline rows \"autoHeightMultiplier\"\r\n\r\n## What's next\r\n\r\nI do have [some ideas regarding additional features](http://tobias-reinhardt.de/discogs-collection-plugin#ideas), but usually - after having achieved what I initially wanted to - I do not get back to those. But I'd of course be very happy about any contributions!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}